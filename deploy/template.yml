# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Infrastructure Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application Model template describing your function.
Resources:
  AspNetOnLambdaAspNetCoreFunction8RHl8dSDEiNL:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Description: ''
      MemorySize: 512
      Timeout: 30
      Handler: AspNetOnLambda::AspNetOnLambda.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnet8
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      Environment:
        Variables:
          OTEL_EXPORTER_OTLP_ENDPOINT: {{DIMGA_COLLECTOR_URL}}
          OTEL_EXPORTER_OTLP_PROTOCOL: grpc
          OTEL_SERVICE_NAME: AspNetOnLambda
          OTEL_DOTNET_AUTO_NAMESPACES: AspNetOnLambda.Services
          OTEL_RESOURCE_ATTRIBUTES: digma.environment={{DIMGA_ENV_NAME}},digma.environment.type=Public
          OTEL_LOG_LEVEL: debug
          OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES: '*'
          AWS_LAMBDA_EXEC_WRAPPER: /opt/otel-instrument
          OTEL_TRACES_EXPORTER: otlp
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      Layers:
        - >-
          arn:aws:lambda:eu-west-1:615299751070:layer:AWSOpenTelemetryDistroDotNet:4
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudformation:DescribeStacks
                - cloudformation:ListStackResources
                - cloudwatch:ListMetrics
                - cloudwatch:GetMetricData
                - ec2:DescribeSecurityGroups
                - ec2:DescribeSubnets
                - ec2:DescribeVpcs
                - kms:ListAliases
                - iam:GetPolicy
                - iam:GetPolicyVersion
                - iam:GetRole
                - iam:GetRolePolicy
                - iam:ListAttachedRolePolicies
                - iam:ListRolePolicies
                - iam:ListRoles
                - lambda:*
                - logs:DescribeLogGroups
                - states:DescribeStateMachine
                - states:ListStateMachines
                - tag:GetResources
                - xray:GetTraceSummaries
                - xray:BatchGetTraces
              Resource: '*'
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: '*'
              Condition:
                StringEquals:
                  iam:PassedToService: lambda.amazonaws.com
            - Effect: Allow
              Action:
                - logs:DescribeLogStreams
                - logs:GetLogEvents
                - logs:FilterLogEvents
                - logs:StartLiveTail
                - logs:StopLiveTail
              Resource: arn:aws:logs:*:*:log-group:/aws/lambda/*
            - Sid: CloudWatchApplicationSignalsXrayWritePermissions
              Effect: Allow
              Action:
                - xray:PutTraceSegments
              Resource:
                - '*'
              Condition:
                StringEquals:
                  aws:ResourceAccount: ${aws:PrincipalAccount}
            - Sid: CloudWatchApplicationSignalsLogGroupWritePermissions
              Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: arn:aws:logs:*:*:log-group:/aws/application-signals/data:*
              Condition:
                StringEquals:
                  aws:ResourceAccount: ${aws:PrincipalAccount}
            - Effect: Allow
              Action:
                - xray:PutTraceSegments
                - xray:PutTelemetryRecords
              Resource:
                - '*'
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Tags:
        AWSServerlessAppNETCore: 'true'
        lambda:createdBy: SAM
      Tracing: Active
      Events:
        Api1:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
        Api2:
          Type: Api
          Properties:
            Path: /
            Method: ANY
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
